WITH RECURSIVE category_tree AS (
SELECT "Id", "SubItemID", "InvoiceID", "Qty", "CustomerPriceID", "Amount", "Printer", "Destination"
FROM "CustomerLineItems"
WHERE "SubItemID" IS NULL -- start with top-level categories
UNION ALL
SELECT oi."Id", oi."SubItemID", oi."InvoiceID", oi."Qty", oi."CustomerPriceID", oi."Amount", oi."Printer", oi."Destination"
FROM "CustomerLineItems" oi
JOIN category_tree ct ON oi."SubItemID" = ct."Id"
), total_amount AS (
SELECT SUM("Amount") AS total FROM category_tree
)
SELECT
COALESCE(it."SubItemID", it."Id") as "Id",
string_agg(p."ProductDescription", ' âž¤ ') as "OrderDetails",
SUM(it."Amount") as "Summary"
FROM category_tree it
JOIN "public"."CustomerPrice" c2 ON (it."CustomerPriceID" = c2."Id")
JOIN "public"."Products" p ON (p."Id" = c2."ProductID")
GROUP BY COALESCE(it."SubItemID", it."Id")
ORDER BY "Id"