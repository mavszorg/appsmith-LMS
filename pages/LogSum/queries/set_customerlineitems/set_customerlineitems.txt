
CREATE TABLE cust_temp_items (
  temp_item_id INTEGER,
	"InvoiceID" TEXT,
  "CustomerPriceID" INTEGER,
  "Qty" INTEGER,
	"Destination" TEXT,
  parent_temp_item_id INTEGER
);

INSERT INTO cust_temp_items (temp_item_id,"InvoiceID","CustomerPriceID","Qty","Destination",parent_temp_item_id)
VALUES 
	 {{appsmith.store.newList.map((d) => { 
		return"(" + "(SELECT max(\"Id\") +"+ d.id +  " FROM \"CustomerLineItems\")," + "(SELECT i.\"InvoiceID\" FROM \"public\".\"Invoice\" i INNER JOIN \"public\".\"Customers\" c1 ON ( c1.\"Id\" = i.\"CustomerID\")  WHERE i.\"InvoiceDate\" >= '"+ moment().format('YYYY-MM-DD') +"' AND	c1.\"OrgID\" = '" + d.orgID + "'),(SELECT c1.\"Id\"FROM \"public\".\"CustomerPrice\" c1  	INNER JOIN \"public\".\"Products\" p ON ( p.\"Id\" = c1.\"ProductID\"  )   	INNER JOIN \"public\".\"Customers\" c2 ON ( c2.\"Id\" = c1.\"CustomerID\"  )  WHERE p.\"ProductDescription\" = " + "'" + d.productDesc + "' AND 	c2.\"OrgID\" ='" + d.orgID + "')," + "" + d.quantity + " ,'"  + d.destinationCountryCode + "' ," + "" + d.parentID + ")"}).join(",")  }};
		
INSERT INTO "CustomerLineItems" ("InvoiceID","CustomerPriceID","Qty","Rate","SubItemID","OrderStatus","Destination") 
SELECT "InvoiceID","CustomerPriceID","Qty",(SELECT "Rate" FROM "CustomerPrice" WHERE "Id" = "CustomerPriceID"),(SELECT COALESCE(MAX("Id"), 0) + parent_temp_item_id FROM "CustomerLineItems"),NULL,"Destination" FROM cust_temp_items;

DROP TABLE cust_temp_items;
