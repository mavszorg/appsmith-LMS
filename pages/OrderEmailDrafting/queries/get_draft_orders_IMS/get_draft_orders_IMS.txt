WITH customer_line_items_query AS (
  SELECT
    c1."CustomerName",
    c3."Id",
    c3."InvoiceID",
    c3."CustomerPriceID",
    c3."Qty",
    c3."Rate",
    c3."Amount",
    c3."SubItemID",
    c3."Printer",
    c3."OrderStatus",
    c3."Notes",
    c3."Destination",
    i."InvoiceDate",
    i."PaymentMethod",
    i."InvoiceStatus",
    i."OrderStatus" AS "InvoiceOrderStatus"
  FROM
    "public"."Customers" c1
    INNER JOIN "public"."CustomerPrice" c2 ON (c2."CustomerID" = c1."Id")
    INNER JOIN "public"."CustomerLineItems" c3 ON (c3."CustomerPriceID" = c2."Id")
    INNER JOIN "public"."Invoice" i ON (i."InvoiceID" = c3."InvoiceID")
  WHERE
    EXISTS (
      SELECT p."ProductDescription"
      FROM "public"."Products" p
      WHERE p."Id" = c2."ProductID"
    )
    AND "SubItemID" IS NULL
    AND to_date(cast(i."InvoiceDate" as TEXT), 'YYYY-MM-DD') >= '{{moment().format('YYYY-MM-DD')}}'
    AND to_date(cast(i."InvoiceDate" as TEXT), 'YYYY-MM-DD') <= '{{moment().format('YYYY-MM-DD')}}'
),
category_tree_query AS (
  WITH RECURSIVE category_tree AS (
    SELECT
      "Id",
      "SubItemID",
      "InvoiceID",
      "Qty",
      "CustomerPriceID",
      "Amount",
      "Printer",
      "Destination"
    FROM
      "CustomerLineItems"
    WHERE
      "SubItemID" IS NULL -- start with top-level categories
    UNION ALL
    SELECT
      oi."Id",
      oi."SubItemID",
      oi."InvoiceID",
      oi."Qty",
      oi."CustomerPriceID",
      oi."Amount",
      oi."Printer",
      oi."Destination"
    FROM
      "CustomerLineItems" oi
      JOIN category_tree ct ON oi."SubItemID" = ct."Id"
  ),
  total_amount AS (
    SELECT SUM("Amount") AS total FROM category_tree
  )
  SELECT
    COALESCE(it."SubItemID", it."Id") AS "Id",
    string_agg(p."ProductDescription", ' ➤ ') AS "OrderDetails",
    SUM(it."Amount") AS "Summary"
  FROM
    category_tree it
    JOIN "public"."CustomerPrice" c2 ON (it."CustomerPriceID" = c2."Id")
    JOIN "public"."Products" p ON (p."Id" = c2."ProductID")
  GROUP BY
    COALESCE(it."SubItemID", it."Id")
  ORDER BY
    "OrderDetails" ASC
),
filtered_category_tree_query AS (
  SELECT *
  FROM category_tree_query
  -- WHERE "OrderDetails" LIKE '%BW SS - First Class%'
),
printer_line_items_query AS (
  SELECT
    main_items."Id" AS "Id",
    CONCAT_WS(' ➤ ', main_items."InitialProdDescription", string_agg(sub_items."InitialProdDescription", ' ➤ ')) AS "OrderDetailsPrinter",
    COALESCE(main_items."Amount", 0) + COALESCE(sub_items_total."Amount", 0) AS "PSummary"
FROM
"PrinterLineItems" AS main_items
LEFT JOIN (
SELECT "SubItemID", SUM("Amount") AS "Amount"
FROM "PrinterLineItems"
WHERE "SubItemID" IS NOT NULL
GROUP BY "SubItemID"
) sub_items_total ON main_items."Id" = sub_items_total."SubItemID"
LEFT JOIN (
SELECT "SubItemID", SUM("Amount") AS "Amount", "InitialProdDescription"
FROM "PrinterLineItems"
WHERE "SubItemID" IS NOT NULL
GROUP BY "SubItemID", "InitialProdDescription"
) sub_items ON main_items."Id" = sub_items."SubItemID"
INNER JOIN "public"."Invoice" i ON i."InvoiceID" = main_items."InvoiceID"
INNER JOIN "Customers" c1 ON (c1."Id" = i."CustomerID")
INNER JOIN "PrinterPrice" p1 ON (p1."Id" = main_items."PrinterPriceID")
INNER JOIN "Products" p2 ON (p2."Id" = p1."ProductID")
WHERE
main_items."SubItemID" IS NULL
GROUP BY
main_items."Id",
main_items."InitialProdDescription",
sub_items_total."Amount"
ORDER BY
main_items."Id" ASC
),
grouped_query AS (
SELECT
CASE
WHEN customer_line_items_query."CustomerName" LIKE '%Glory%' THEN 'BW DS - FC Generic - Credit Glory Inc'
WHEN customer_line_items_query."CustomerName" LIKE '%Credit Sage LLC%' THEN 'BW DS - FC Generic - Credit Sage LLC Inc'
WHEN customer_line_items_query."CustomerName" LIKE '%ECA GreenTech%' THEN 'ECA Greentech'
ELSE filtered_category_tree_query."OrderDetails"
END AS "GroupDetails",
SUM(customer_line_items_query."Qty") OVER (PARTITION BY customer_line_items_query."CustomerName" ORDER BY customer_line_items_query."CustomerName") AS "QtyTotal",
customer_line_items_query."CustomerName",
customer_line_items_query."Qty",
printer_line_items_query."OrderDetailsPrinter",
printer_line_items_query."PSummary",
customer_line_items_query."Destination"
FROM
customer_line_items_query
JOIN filtered_category_tree_query ON customer_line_items_query."Id" = filtered_category_tree_query."Id"
JOIN printer_line_items_query ON customer_line_items_query."Id" = printer_line_items_query."Id"
WHERE
customer_line_items_query."Printer" = '{{Select3.selectedOptionLabel}}'
)
SELECT
CASE
WHEN ROW_NUMBER() OVER (PARTITION BY "GroupDetails" ORDER BY "GroupDetails") = 1 THEN MAX("QtyTotal") OVER (PARTITION BY "GroupDetails" ORDER BY "GroupDetails")
ELSE NULL
END AS "OrderCounts",
"GroupDetails" as "Collaterals",
"CustomerName" as "Clients",
"Qty" || ' '|| "OrderDetailsPrinter" as "OrderDetails",
"PSummary" as "Subtotal",
"Destination" as "To"
FROM
grouped_query
ORDER BY
"GroupDetails" ASC;
